@model MovieApp.Controllers.HomeViewModel
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>MovieApp</title>
	<link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="/css/site.css" />
	<link rel="stylesheet" href="/css/bootstrap.min.css" />
	<link rel="stylesheet" href="/css/bootstrap-icons.css" />
	<link rel="stylesheet" href="/css/owl.carousel.min.css" />
	<link rel="stylesheet" href="/css/owl.theme.default.min.css" />
	<link href="/css/templatemo-pod-talk.css" rel="stylesheet" />
	<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400&family=Sono:wght@200;300;400;500;700&display=swap" rel="stylesheet">
	<style>
		.embed-responsive {
			position: relative;
			padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
			height: 0;
			overflow: hidden;
		}
		.embed-responsive-item {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		}
		#rating {
			display: flex;
			direction: rtl;
		}
		#rating input {
			display: none;
		}
		#rating label {
			font-size: 2em;
			color: #ccc;
			cursor: pointer;
		}
		.comment-avatar {
			width:30px;
			height:30px;
		}
		#rating input:checked ~ label {
			color: #f39c12;
		}
		#rating label:hover,
		#rating label:hover ~ label {
			color: #f39c12;
		}
	</style>
</head>
<body>
	<!-- Navigation omitted for brevity -->

	<main>
		<header class="site-header d-flex flex-column justify-content-center align-items-center">
			<div class="container">
				<div class="row"></div>
			</div>
		</header>

		<!-- Watch Movie Section -->
		<section class="watch-movie-section section-padding">
			<div class="container">
				<div class="row justify-content-center">
					<div class="col-lg-10 col-12">
						<div class="section-title-wrap mb-5">
							<h4 class="section-title">@Model.Movie.Title</h4>
						</div>
						@if (!string.IsNullOrEmpty(Model.Movie.Title))
						{
							@foreach (var episode in Model.Episodes)
							{
								<div class="movie-video-wrap">
									<div class="embed-responsive embed-responsive-16by9">
										<iframe class="embed-responsive-item" src="@episode.Source" allowfullscreen></iframe>
									</div>
								</div>

							}

						}
						else
						{
							<p>Link phim không khả dụng.</p>
						
						}

					</div>
				</div>
			</div>
		</section>
<section class="comments-section section-padding">
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-lg-10 col-12">
				<div class="section-title-wrap mb-5">
					<h4 class="section-title">Bình Luận</h4>
				</div>

				<!-- Bắt đầu danh sách bình luận -->
						@if (Model.Comments != null && Model.Comments.Any())
						{
							@foreach (var comment in Model.Comments)
							{
								<div class="comment-item d-flex mb-4">
									<div class="comment-avatar">
												<img src="~/images/profile/cute-smiling-woman-outdoor-portrait.jpg" class="img-fluid rounded-circle" alt="Avatar">
									</div>
									<div class="comment-content ms-3">
										<h5 class="comment-author mb-1">@comment.Author</h5>
										<div class="comment-rating mb-1">
											@for (int i = 0; i < 5; i++)
											{
												if (i < comment.Rating)
												{
															<span class="text-warning">&#9733;</span> <!-- Rated star -->
												}
												else
												{
															<span class="text-warning">&#9734;</span> <!-- Unrated star -->
												}
											}
										</div>
										<p class="comment-text mb-0">@comment.Content</p>
									</div>
								</div>
							}
						}
						else
						{
						<p>Không có bình luận nào.</p>
						}
				<!-- Kết thúc danh sách bình luận -->
			</div>
		</div>
	</div>
</section>

						
<!-- Kết thúc danh sách bình luận -->
				}
			</div>
		</div>
	</div>
</section>


		<!-- Comments Section omitted for brevity -->

		<!-- Related Movies Section omitted for brevity -->
	</main>

	<!-- Scripts omitted for brevity -->

	<script>
		document.getElementById('reviewForm').addEventListener('submit', function(e) {
			e.preventDefault();  // Ngăn form gửi dữ liệu theo cách mặc định

			var rating = document.querySelector('input[name="rating"]:checked').value;
			var comment = document.getElementById('comment').value;

			fetch('@Model.baseURL/api/rating', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({
					movieId: '@Model.Id',  // Thêm movieId vào dữ liệu gửi
					rating: rating,
					comment: comment
				})
			})
			.then(response => response.json())
			.then(data => {
				alert('Đánh giá của bạn đã được gửi thành công!');
			})
			.catch(error => {
				console.error('Lỗi khi gửi đánh giá:', error);
				alert('Gửi đánh giá thất bại, vui lòng thử lại sau.');
			});
		});
	</script>
</body>
</html>
